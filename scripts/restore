#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

if [ ! -e _common.sh ]; then
	# Get the _common.sh file if it's not in the current directory
	cp ../settings/scripts/_common.sh ./_common.sh
	chmod a+rx _common.sh
fi
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_app_setting_get "$app" path)
final_path=$(ynh_app_setting_get "$app" final_path)
db_name=$(ynh_app_setting_get "$app" db_name)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================

ynh_webpath_available "$domain" "$path_url" \
	|| ynh_die "Path not available: ${domain}${path_url}"
test ! -d "$final_path" \
	|| ynh_die "There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore_file "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================

ynh_restore_file "$final_path"

#=================================================
# RESTORE THE MYSQL DATABASE
#=================================================

db_pwd=$(ynh_app_setting_get "$app" mysqlpwd)
ynh_mysql_setup_db "$db_name" "$db_name" "$db_pwd"
ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_name" < ./db.sql

#=================================================
# RECREATE THE DEDICATED USER
#=================================================

# Create the dedicated user (if not existing)
ynh_system_user_create "$app"

#=================================================
# RESTORE USER RIGHTS
#=================================================

# no need, keep the default root:root

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies python-dev python-virtualenv \
			 uwsgi uwsgi-plugin-python

#=================================================
# RESTORE THE UWSGI MECANICS
#=================================================

ynh_restore_file "/etc/systemd/system/$app.service"

# make sure the folder for sockets exists and set authorizations
mkdir -p /var/run/uwsgi/
chown root:www-data /var/run/uwsgi/
chmod -R 775 /var/run/uwsgi/

# make sure the folder for logs exists and set authorizations
mkdir -p /var/log/$app
chown root:www-data /var/log/$app
chmod -R 775 /var/log/$app

#=================================================
# RESTORE SERVICE
#=================================================

usermod --append --groups www-data "$app"

ynh_restore_file "/etc/uwsgi/apps-available/$app.ini"

systemctl daemon-reload
systemctl enable "$app.service"

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add "$app.service --log "/var/log/$app/service.log"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_restore_file "/etc/logrotate.d/$app"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================

systemctl start "$app.service"
systemctl reload nginx
